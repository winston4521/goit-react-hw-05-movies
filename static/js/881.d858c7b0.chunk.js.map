{"version":3,"file":"static/js/881.d858c7b0.chunk.js","mappings":"mRACMA,EAAM,mCACNC,EAAM,gCAECC,EAAW,WACtB,OAAOC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oCAA4CD,GACpD,EAEYI,EAAW,SAAAC,GACtB,OAAOF,EAAAA,GAAAA,IAAA,UACFF,EADE,gCACyBD,EADzB,iCACqDK,EADrD,+BAGR,EAEYC,EAAe,SAAAC,GAC1B,OAAOJ,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAAyBM,EAAzB,oBAA4CP,EAA5C,mBACR,EAEYQ,EAAU,SAAAD,GACrB,OAAOJ,EAAAA,GAAAA,IAAA,UACFF,EADE,iBACUM,EADV,4BACqCP,EADrC,mBAGR,EAEYS,EAAY,SAAAF,GACvB,OAAOJ,EAAAA,GAAAA,IAAA,UACFF,EADE,iBACUM,EADV,4BACqCP,EADrC,0BAGR,C,6HC3BD,EAAgC,8BAAhC,EAAqE,qBAArE,EAAuG,2BAAvG,EAA8I,0BAA9I,EAAwL,8BAAxL,EAAwQ,0BAAxQ,EAA8S,0BAA9S,EAAyV,+B,SCqEzV,EA/De,WAAO,IAAD,EACnB,GAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,GAsBlD,OACE,qBAASC,UAAWC,EAApB,WACE,kBAAMD,UAAWC,EAAUC,SAtBP,SAAAC,GAEtB,GADAA,EAAEC,iBACyB,KAAvBN,EAAYO,OACd,OAAOC,EAAAA,GAAAA,KAAW,iCAGpBtB,EAAAA,EAAAA,IAASc,GAAaS,MAAK,SAAAC,GACzB,IAAQC,EAASD,EAATC,KACR,GAA4B,IAAxBA,EAAKC,QAAQC,OACf,OAAOL,EAAAA,GAAAA,KAAA,yCAA6CR,IAEtDN,EAAUiB,EAAKC,QAChB,IACDP,EAAES,OAAOC,OACV,EAQG,WACE,mBAAQb,UAAWC,EAAgBa,KAAK,YAExC,kBACEd,UAAWC,EACXc,QAAS,SAAAZ,GAAC,OAXIa,EAWcb,EAAEc,cAAcD,MAAME,mBAVxDvB,EAA0B,KAAVqB,EAAe,CAAEG,OAAQH,GAAU,CAAC,GADhC,IAAAA,CAWJ,EACVF,KAAK,OACLM,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZN,MAAOlB,QAIX,gBAAKE,UAAWC,EAAhB,SACGV,EAAOoB,OAAS,IACf,eAAIX,UAAWC,EAAf,SACGV,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,EAA2BC,aAA3B,OACV,eAAI3B,UAAWC,EAAf,UACE,UAAC,KAAD,CAAS2B,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMlC,GAA7C,WACE,gBACEmC,IAAG,yCAAoCL,GACvCM,IAAKP,KAEP,eAAIzB,UAAWC,EAAf,SAAoCwB,QANLD,EADzB,UAgBvB,C","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '2c84da57b63e5566f246dbdad2c46707';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const ApiTrend = () => {\n  return axios.get(`${URL}trending/all/day?api_key=${KEY}`);\n};\n\nexport const ApiQuery = query => {\n  return axios.get(\n    `${URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const ApiMovieInfo = movieId => {\n  return axios.get(`${URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n};\n\nexport const ApiCast = movieId => {\n  return axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport const ApiReview = movieId => {\n  return axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"Movies_formContainer__f2YGl\",\"form\":\"Movies_form__4ow+Z\",\"formButton\":\"Movies_formButton__DQX-Z\",\"formInput\":\"Movies_formInput__zmXM8\",\"moviesSection\":\"Movies_moviesSection__o4M2J\",\"homeTitle\":\"Movies_homeTitle__ht1op\",\"movieList\":\"Movies_movieList__FD6N4\",\"movieItem\":\"Movies_movieItem__U+pt+\",\"movieItemTitle\":\"Movies_movieItemTitle__OEGQ1\",\"release_date\":\"Movies_release_date__Ibf01\"};","import { ApiQuery } from '../../components/Api/Api';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchParam = searchParams.get('search') ?? '';\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (searchParam.trim() === '') {\n      return toast.warn('Input value can not be empty');\n    }\n\n    ApiQuery(searchParam).then(res => {\n      const { data } = res;\n      if (data.results.length === 0) {\n        return toast.warn(`No Movies found with that name ${searchParam}`);\n      }\n      setMovies(data.results);\n    });\n    e.target.reset();\n  };\n\n  const onInputChange = value => {\n    setSearchParams(value !== '' ? { search: value } : {});\n  };\n\n  return (\n    <section className={css.formContainer}>\n      <form className={css.form} onSubmit={onSubmitHandler}>\n        <button className={css.formButton} type=\"submit\"></button>\n\n        <input\n          className={css.formInput}\n          onInput={e => onInputChange(e.currentTarget.value.toLowerCase())}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={searchParam}\n        />\n      </form>\n\n      <div className={css.moviesSection}>\n        {movies.length > 0 && (\n          <ul className={css.movieList}>\n            {movies.map(({ id, title, poster_path, release_date }) => (\n              <li className={css.movieItem} key={id}>\n                <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                    alt={title}\n                  />\n                  <h3 className={css.movieItemTitle}>{title}</h3>\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","URL","ApiTrend","axios","ApiQuery","query","ApiMovieInfo","movieId","ApiCast","ApiReview","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchParam","get","className","css","onSubmit","e","preventDefault","trim","toast","then","res","data","results","length","target","reset","type","onInput","value","currentTarget","toLowerCase","search","autoComplete","autoFocus","placeholder","map","id","title","poster_path","release_date","to","state","from","src","alt"],"sourceRoot":""}